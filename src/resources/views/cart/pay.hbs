<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-header">
                <h5 class="mt-1">Shipping infomation</h5>
            </div>
            <div class="card-body">
                <p class="text-start">
                    First name: {{shippingInfo.firstname}}
                </p>

                <p class="text-start">
                    Last name: {{shippingInfo.lastname}}
                </p>

                <p class="text-start">
                    Email: {{shippingInfo.email}}
                </p>

                <p class="text-start">
                    Phone number{{shippingInfo.phone}}
                </p>

                <p class="text-start">
                    Address: {{shippingInfo.address}}
                </p>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-header">
                <h5 class="mt-1">Order Summary ORDER ID</h5>
            </div>
            <div class="card-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th class="text-center">Image</th>
                            <th class="text-center">Price</th>
                            <th class="text-center">Quantity</th>
                            <th class="text-right">Cost</th>
                        </tr>
                    </thead>
                    <tbody class="table">
                        {{#each cartItems}}
                        <tr></tr>
                        <tr class="border-top-0" data-id="{{this.product_id}}">
                            <td>{{this.name}}</td>
                            <td class="text-center">
                                <img src="{{getImage this.imageId}}" style="width: 70px" alt="{{this.name}}">
                            </td>
                            <td class="text-center">{{this.price}}</td>
                            <td class="text-center">{{this.quantity}}</td>
                            <td class="text-right">{{this.totalCost}}</td>
                        </tr>
                        {{/each}}

                        <tr class="">
                            <td colspan="2" class="text-start">Total products:</td>
                            <td colspan="3" class="text-end">{{cartQuantity}}</td>
                        </tr>
                        <tr class="">
                            <td colspan="2" class="text-start">Total cost</td>
                            <td colspan="3" class="text-end">{{cartTotalCost}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="paypal-button-container"></div>
        </div>
    </div>
</div>

<head>
    <script src="https://www.paypal.com/sdk/js?client-id={{PAYPAL_CLIENT_ID}}&currency=USD"></script>
</head>



<script>
    $(document).ready(function () {

        let items = [];
        // Iterate over each row in the table body that has a data-slug attribute
        $('tr[data-id]').each(function () {
            // Extract the slug and quantity from the relevant columns
            var itemId = $(this).data('id');
            var quantity = parseInt($(this).find('td:nth-child(4)').text().trim());

            // Add the item to the array
            items.push({
                product_id: itemId,
                quantity: quantity
            });
        });
        paypal.Buttons({
            // Order is created on the server and the order id is returned
            createOrder() {
                return fetch('/orders/create', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        items
                    })

                })
                    .then(res => {
                        if (!res.ok) {
                            throw new Error("Failed to create order");
                        }
                        return res.json();
                    })
                    .then(({ id }) => {
                        return id;
                    })
                    .catch(e => {
                        console.error(e.message);
                        alert("Failed to create order. Please try again later.");
                    })

            },
            // Finalize the transaction on the server after payer approval
            onApprove(data, actions) {
                return actions.order.capture()
                    .then((details) => {
                        console.log('on approve:', details)
                        // todo: save order to db
                        fetch('/orders/update', {
                            method: 'PUT',
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify(details)
                        })
                            .then(response => console.log(response))
                            .catch(e => console.error(e))
                        alert("Transaction completed by " + details.payer.name.given_name + "\nYou will be redirected to the home page in a few second!\nThank you for your support!");
                        return Promise.resolve();
                    })
                    .catch(e => {
                        console.error(e.message);
                        alert("Failed to capture the transaction. Please contact customer support.");
                        return Promise.reject(e);
                    })
                    .then(() => {
                        setTimeout(() => {
                            window.location.replace('/');
                        }, 5000); // wait for 3 seconds before redirecting
                    });
            }
        }).render('#paypal-button-container');
    })

</script>