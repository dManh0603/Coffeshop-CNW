<div class="pay__page d-flex justify-content-center align-items-center">
    <div class="container m-5">
        <div class="row g-5 w-100">
            <div class="col-12 col-lg-8 pay__order">
                <h2 class="text-center m-3">THÔNG TIN<span style="color: var(--primary-1);"> ĐƠN HÀNG</span></h2>
                {{#each cartItems}}
                <div class="row pay__order-info no-gutters" data-id="{{this.product_id}}"
                    data-quantity="{{this.quantity}}">
                    <div class="col-6 pay__order__image-left p-2">
                        <img src="{{getImage this.imageId}}" class="w-100" alt="">
                    </div>
                    <div
                        class="col-6 pay__order__content-right pl-2 d-flex justify-content-center align-items-left flex-column">
                        <h4 class="pay__order__content-title mb-2">{{this.name}}</h4>
                        <p class="pay__order__content-description">Số lượng: {{this.quantity}}</p>
                        <p class="pay__order__content-description">Đơn giá: {{this.price}}</p>
                        <p class="pay__order__content-description">Tổng tiền: {{this.totalCost}}</p>
                    </div>
                </div>
                {{/each}}
                <div class="row pay__order-check no-gutters">
                    <table>
                        <tr>
                            <td>Tổng sản phẩm:</td>
                            <td>{{cartQuantity}}</td>
                        </tr>
                        <tr>
                            <td>Tổng hóa đơn:</td>
                            <td>{{cartTotalCost}}</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="col-lg-4 shipping__info">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mt-1">THÔNG TIN VẬN CHUYỂN</h4>
                    </div>
                    <div class="card-body">
                        <p class="text-start">
                            Tên: {{shippingInfo.firstname}}
                        </p>

                        <p class="text-start">
                            Họ: {{shippingInfo.lastname}}
                        </p>

                        <p class="text-start">
                            Email: {{shippingInfo.email}}
                        </p>

                        <p class="text-start">
                            Số điện thoại: {{shippingInfo.phone}}
                        </p>

                        <p class="text-start">
                            Địa chỉ: {{shippingInfo.address}}
                        </p>
                    </div>
                </div>
            </div>
            <div id="paypal-button-container"></div>
        </div>
    </div>
</div>

<head>
    <script src="https://www.paypal.com/sdk/js?client-id={{PAYPAL_CLIENT_ID}}&currency=USD"></script>
</head>



<script>
    $(document).ready(function () {

        let items = [];
        // Iterate over each row in the table body that has a data-slug attribute
        $('.pay__order-info').each(function () {
            // Extract the slug and quantity from the relevant columns
            const itemId = $(this).data('id');
            const quantity = $(this).data('quantity');

            // Do something with the itemId and quantity data
            console.log(itemId, quantity);

            // Add the item to the array
            items.push({
                product_id: itemId,
                quantity: quantity
            });
        });




        paypal.Buttons({
            // Order is created on the server and the order id is returned
            createOrder() {
                return fetch('/orders/create', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        items
                    })

                })
                    .then(res => {
                        if (!res.ok) {
                            throw new Error("Failed to create order");
                        }
                        return res.json();
                    })
                    .then(({ id }) => {
                        return id;
                    })
                    .catch(e => {
                        console.error(e.message);
                        alert("Failed to create order. Please try again later.");
                    })

            },
            // Finalize the transaction on the server after payer approval
            onApprove(data, actions) {
                return actions.order.capture()
                    .then((details) => {
                        console.log('on approve:', details)
                        // todo: save order to db
                        fetch('/orders/update', {
                            method: 'PUT',
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify(details)
                        })
                            .then(response => console.log(response))
                            .catch(e => console.error(e))
                        alert("Transaction completed by " + details.payer.name.given_name + "\nYou will be redirected to the home page in a few second!\nThank you for your support!");
                        return Promise.resolve();
                    })
                    .catch(e => {
                        console.error(e.message);
                        alert("Failed to capture the transaction. Please contact customer support.");
                        return Promise.reject(e);
                    })
                    .then(() => {
                        setTimeout(() => {
                            window.location.replace('/');
                        }, 5000); // wait for 3 seconds before redirecting
                    });
            }
        }).render('#paypal-button-container');

    });
</script>